    <div class="container">
      <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <span class="glyphicon glyphicon-menu-hamburger"></span>
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <a class="dropdown-item" href="<%= logout_path %>">Log Out</a><br/>
          <a class="dropdown-item" href="">Logged in as <%=@user.name%></a><br/>
          <% if @user.contact == true %>
            <a class="dropdown-item" href="<%= notifications_path(@user) %>">Disable Notifications</a><br/>
          <% elsif @user.contact == false %>
            <a class="dropdown-item" href="<%= notifications_path(@user)%>">Enable Notifications</a><br/>
          <% end %>
        </div>
      </div>
      <h1 align="center">ParQueen</h1>
    </div>
    <% if @user.phone_number == nil && @user.contact == true %>
      <%= render "phone/new.html.erb" %>
    <% else  %>
    <br>
    <script>
      var map, infoWindow;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: -34.397, lng: 150.644},
          zoom: 20
        });
        infoWindow = new google.maps.InfoWindow;

        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            infoWindow.open(map);
            map.setCenter(pos);
          }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          handleLocationError(false, infoWindow, map.getCenter());
        }
      }

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
                              'Error: The Geolocation service failed.' :
                              'Error: Your browser doesn\'t support geolocation.');
        infoWindow.open(map);
      }
    </script>
    <script async defer
      src="https://maps.googleapis.com/maps/api/js?key=<%=ENV['GOOGLE_API_KEY']%>&callback=initMap">
    </script>
    <div id="map"></div>
    <br>
    <p align="center"><button  onclick="getLocation()">Park Here</button></p>
    <div class="container">
      <div class="card" style="width: 40vw;">
        <div class="card-body">
          <h5 class="card-title"><div id="spot_info"></div></h5>
          <h5 class="card-title"><div id="saved"></div></h5>
      </div>
      </div>
    </div>
    <% if @user.contact == true && @user.phone_number != nil %>
      <%= render "texts/new.html.erb" %>
    <% end %>
  <% end %>
  <script type="text/javascript">
    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(showPosition);}
      else {
        var loc = "0,0";
        window.location.href=`/parking?location=${loc}`;
      }
    }
    function showPosition(position) {
      var key = "<%= ENV["COORD_TOKEN"] %>";
      var lat = position['coords']['latitude'];
      var lon = position['coords']['longitude'];
      sessionStorage.setItem('coord', (lat + "," + lon));
      var rad = 0.001;
      var url = "https://api.coord.co/v1/search/curbs/bylocation/time_rules?access_key=" + key + "&latitude="+ lat + "&longitude=" + lon + "&radius_km=" + rad;
      fetch(url).then(response => response.json()).then((response) => {this.printSpot(response)});
    }

    function printSpot(response) {
      if (response['no_curbs_reason']) {
        document.getElementById("spot_info").innerHTML = (response['no_curbs_reason'])
      }
      else if (response['features'][0]['properties']['uses']['use'] === 'park') {
        sessionStorage.setItem('side_of_street', (response['features'][0]['properties']['metadata']['side_of_street']));
        sessionStorage.setItem('street_name', (response['features'][0]['properties']['metadata']['street_name']));
        sessionStorage.setItem('start_cross_street', (response['features'][0]['properties']['metadata']['start_street_name']));
        sessionStorage.setItem('end_cross_street', (response['features'][0]['properties']['metadata']['end_street_name']));
        sessionStorage.setItem('curb_id', (response['features'][0]['properties']['metadata']['curb_id']));
        document.getElementById("spot_info").innerHTML = "You parked on the "
        + sessionStorage.getItem('side_of_street') + " side of "
        + sessionStorage.getItem('street_name') + " between "
        + sessionStorage.getItem('start_cross_street') + " and "
        + sessionStorage.getItem('end_cross_street');
        this.saveParking()
      }
      else if (response){
        document.getElementById("spot_info").innerHTML = 'YOU CANNOT LEGALLY PARK HERE!';
      }
    }

    function saveParking() {
      var path = "/parking";
      var url = path + "?coord="+ sessionStorage.getItem('coord')
                     + "&street_name="+ sessionStorage.getItem('street_name')
                     + "&start_cross_street="+ sessionStorage.getItem('start_cross_street')
                     + "&end_cross_street="+ sessionStorage.getItem('end_cross_street')
                     + "&side_of_street="+ sessionStorage.getItem('side_of_street');
      fetch(url, {method: 'post',headers: {
                 'Content-Type': 'application/json',
                 'X-CSRF-Token': Rails.csrfToken()
                                          }
                  })
      document.getElementById("saved").innerHTML = 'Parking spot saved.';
      }
  </script>
